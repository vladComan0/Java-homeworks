/*Mircica Tudor 
ETTI anul II, sectia Engleza, grupa 4 
tudor2mircica@gmail.com
Lab 9(10.05.2020) 
3. Write a class for determining a certain value from Fibonacci’s array. The class has 2 methods, one for calculating and the other for displaying the desired value. 
Use a synchronized multithreading mechanism in which one process displays all the Fibonacci numbers smaller than the desired value computed by the other process.*/
import java.util.*;
import java.io.*;

class Fib {

	int calc(int n) {
		int a = 0;
		int b = 1;
		int c = 1;
		if (n == 0)
			c = -1;
		if (n == 1)
			c = 0;
		if (n == 2)
			c = 1;
		for (int i = 2; i < n; i++) {
			c = a + b;
			a = b;
			b = c;
		}
		return c;
	}

	synchronized void afis(int c) {
		System.out.print(c + " ");
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			System.out.println("Interrupted");
		}

	}
}

class Fir implements Runnable {
	Fib F;
	int x;
	Thread t;

	public Fir(Fib G, int y) {
		F = G;
		x = y;
		t = new Thread(this);
		t.start();
	}

	@Override
	public void run() {
		for (int i = 1; i < x; i++) {
			F.afis(F.calc(i));
		}
	}

}

class Calculare implements Runnable {
	Fib F;
	int x;
	Thread t;

	public Calculare(Fib G, int y) {
		F = G;
		x = y;
		t = new Thread(this);
		t.start();
	}

	@Override
	public void run() {
		F.afis(F.calc(x));

	}

}

public class Project {
	public static void main(String args[]) throws InterruptedException {
		Scanner dis = new Scanner(System.in);
		Fib test = new Fib();
		System.out.println("Specify the index of the Fibonacci series you want to find: ");
		int n = dis.nextInt();
		Fir fibo = new Fir(test, n);
		fibo.t.join();
		Calculare c = new Calculare(test, n);
		c.t.join();
	}
}