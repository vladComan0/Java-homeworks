/*Implement a graphical Java application that displays in the main frame a 
button labeled ”Start” and a Canvas component. After pushing the button its 
label is changed to ”Stop” and a thread is started. The thread draws a 
circle on the canvas. The circle is descending from the upper left corner 
and is moved to the right in the same time. When hitting the canvas margins,
the circle changes its moving direction. The drawing thread is stopped when 
the user presses the button again.
Vlad Coman, Group 2024
31.05.2020
 */
package lab124;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
class MyThread implements Runnable{
	MyCanvas canvas;
	Thread t;
	Boolean bool;
	MyThread(){
		canvas=new MyCanvas();
		t=new Thread(this);
		bool=true;
	}
	public void run() {
		int x=0,y=0;
		while(bool) {
			if(canvas.getX()!=350 && canvas.getY()!=350) {
			while(canvas.getX()!=350 && canvas.getY()!=350) {
			x+=1;
			y+=1;
			canvas.setX(x);
			canvas.setY(y);
			canvas.repaint();
			if(bool==false)
				break;
			try {
				t.sleep(10);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			}
		}
		if(canvas.getX()==350 && canvas.getY()==350) {
			while(canvas.getX()!=0 && canvas.getY()!=0) {
				x-=1;
				y-=1;
				canvas.setX(x);
				canvas.setY(y);
				canvas.repaint();
				if(bool==false)
					break;
				try {
					t.sleep(10);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
	}
	public MyCanvas getCanvas() {
		return canvas;
	}
	public void setCanvas(MyCanvas canvas) {
		this.canvas = canvas;
	}
	public Boolean getBool() {
		return bool;
	}
	public void setBool(Boolean bool) {
		this.bool = bool;
	}
	
}
class Drawer extends JFrame {
	MyThread thread;
		Drawer(){
		super();
		JButton start=new JButton();
		start.setText("START");
		thread=new MyThread();
		start.addActionListener(new ActionListener(){
			   public void actionPerformed(ActionEvent ae){
				 if(start.getText().contains("START")) {
					 start.setText("STOP");
					 thread.t.start();
				 }
				 else
					 if(start.getText().contains("STOP")) {
						 start.setText("START");
						 thread.setBool(false);
					 }
			   }
			});
		start.setBounds(100,450,100,50);
		this.add(thread.getCanvas());
		this.add(start);
		this.setSize(600,600);
		this.setLayout(null);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setVisible(true);
	}
}
class MyCanvas extends Canvas{
	private static final long serialVersionUID = 1L;
	int x,y;
	public MyCanvas() {
		this.setSize(new Dimension(400, 400));
		this.setBackground(new Color(255, 255, 255));
		this.x=0;
		this.y=0;
	}
	public void paint(Graphics g) {
		g.setColor(Color.blue);
		g.fillOval(x, y, 50, 50);
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
}
public class Main{
public static void main(String args[]) {
	new Drawer();
}
}
